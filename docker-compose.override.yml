# Docker Compose Override for Development
# This file is automatically loaded by docker-compose and provides development-specific settings

services:
  mcp-payments:
    build:
      target: development
    environment:
      - ENV=development
      - DEBUG=true
    volumes:
      # Mount source code for live reload
      - ./app:/app/app:rw
      - ./requirements:/app/requirements:ro
      - ./logs:/app/logs:rw
      - ./data/uploads:/app/uploads:rw
    command: >
      sh -c "
        echo 'Starting MCP Payments in DEVELOPMENT mode with auto-reload...'
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/app
      "

  celery-worker:
    build:
      context: .
      target: development
    command: >
      sh -c "
        echo 'Starting Celery worker in development mode...'
        watchmedo auto-restart --directory=./app --pattern=*.py --recursive -- celery -A app.tasks.celery_app worker --loglevel=info
      "
    volumes:
      - ./app:/app/app:rw
    environment:
      - ENV=development
      - NODE_ENV=development
      - DEBUG=true
      - JWT_SECRET_KEY=dev_jwt_secret_key_change_in_production_32_chars_long
      - ENCRYPTION_KEY=dev_encryption_key_change_in_production_32_chars_long
    depends_on:
      - postgres
      - redis

  celery-beat:
    build:
      context: .
      target: development
    command: >
      sh -c "
        if [ '$ENV' = 'development' ]; then
          echo 'Starting Celery beat in development mode...'
          celery -A app.tasks.celery_app beat --loglevel=info
        else
          echo 'Starting Celery beat in production mode...'
          celery -A app.tasks.celery_app beat --loglevel=warning
        fi
      "
    volumes:
      - ./app:/app/app:rw
    environment:
      - ENV=development
      - NODE_ENV=development
      - DEBUG=true
      - JWT_SECRET_KEY=dev_jwt_secret_key_change_in_production_32_chars_long
      - ENCRYPTION_KEY=dev_encryption_key_change_in_production_32_chars_long
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./frontend
      target: development
    user: "0:0"  # Run as root in development to avoid permission issues
    command: >
      sh -c "
        echo 'Starting React Frontend in DEVELOPMENT mode with hot reload...'
        rm -rf /app/node_modules/.vite
        npm start
      "
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    depends_on:
      - mcp-payments

  # Development tools
  # Add PGAdmin for database management in development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mcp-payments-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@payments.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - payments-network
    profiles:
      - dev-tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcp-payments-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - payments-network
    profiles:
      - dev-tools

volumes:
  pgadmin_data:
    driver: local 